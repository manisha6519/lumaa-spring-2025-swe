{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manisha.aerra031\\\\task-manager-frontend\\\\src\\\\components\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const {\n        data\n      } = await api.get('/tasks');\n      setTasks(data);\n    };\n    fetchTasks();\n  }, []);\n  const handleComplete = async taskId => {\n    try {\n      // Update the task with status field (true for completed)\n      const response = await api.put(`/tasks/${taskId}`, {\n        status: true\n      });\n\n      // Check the response from the backend\n      if (response.status === 200) {\n        setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n          ...task,\n          status: true\n        } : task));\n      } else {\n        alert('Failed to mark task as complete');\n      }\n    } catch (error) {\n      console.error('Error completing task:', error);\n      alert('Error completing task');\n    }\n  };\n  const handleDelete = async taskId => {\n    try {\n      await api.delete(`/tasks/${taskId}`);\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      alert('Error deleting task');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.status ? 'Completed' : 'Not completed'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleComplete(task.id),\n          children: \"Mark as Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","fetchTasks","data","get","handleComplete","taskId","response","put","status","prevTasks","map","task","id","alert","error","console","handleDelete","delete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","_c","$RefreshReg$"],"sources":["C:/Users/manisha.aerra031/task-manager-frontend/src/components/TaskList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../utils/api';\r\n\r\ninterface Task {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  status: boolean; // Use 'status' instead of 'isComplete'\r\n}\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      const { data } = await api.get('/tasks');\r\n      setTasks(data);\r\n    };\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleComplete = async (taskId: number) => {\r\n    try {\r\n      // Update the task with status field (true for completed)\r\n      const response = await api.put(`/tasks/${taskId}`, { status: true });\r\n      \r\n      // Check the response from the backend\r\n      if (response.status === 200) {\r\n        setTasks((prevTasks) =>\r\n          prevTasks.map((task) =>\r\n            task.id === taskId ? { ...task, status: true } : task\r\n          )\r\n        );\r\n      } else {\r\n        alert('Failed to mark task as complete');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error completing task:', error);\r\n      alert('Error completing task');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (taskId: number) => {\r\n    try {\r\n      await api.delete(`/tasks/${taskId}`);\r\n      setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n      alert('Error deleting task');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Tasks</h2>\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task.id}>\r\n            <h3>{task.title}</h3>\r\n            <p>{task.status ? 'Completed' : 'Not completed'}</p>\r\n            <button onClick={() => handleComplete(task.id)}>Mark as Complete</button>\r\n            <button onClick={() => handleDelete(task.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}